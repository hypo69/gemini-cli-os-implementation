# =================================================================================
# Find-Spec.ps1
# –°–ø–µ—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–π AI-–ø–æ–∏—Å–∫–æ–≤–∏–∫ —Å–ø–µ—Ü–∏—Ñ–∏–∫–∞—Ü–∏–π –ø–æ SKU –∏–ª–∏ –º–æ–¥–µ–ª–∏.
# –ê–≤—Ç–æ—Ä: hypo69
# –î–∞—Ç–∞ —Å–æ–∑–¥–∞–Ω–∏—è: 20/08/2025
# =================================================================================
<#
.SYNOPSIS
    –£—Ç–∏–ª–∏—Ç–∞ –¥–ª—è –±—ã—Å—Ç—Ä–æ–≥–æ –ø–æ–∏—Å–∫–∞ —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏—Ö —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫ –ø–æ –Ω–∞–∑–≤–∞–Ω–∏—é –ø—Ä–æ–¥—É–∫—Ç–∞.
.DESCRIPTION
    –ü—Ä–æ—Å—Ç–æ –≤–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –ø—Ä–æ–¥—É–∫—Ç–∞, –µ–≥–æ –º–æ–¥–µ–ª—å –∏–ª–∏ –∞—Ä—Ç–∏–∫—É–ª (SKU).
    –°–∫—Ä–∏–ø—Ç –∏—Å–ø–æ–ª—å–∑—É–µ—Ç Gemini AI –¥–ª—è –ø–æ–∏—Å–∫–∞ —Å–ø–µ—Ü–∏—Ñ–∏–∫–∞—Ü–∏–π –≤ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç–µ –∏ –≤—ã–≤–æ–¥–∏—Ç
    –∏—Ö –≤ —É–¥–æ–±–Ω–æ–π –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–æ–π —Ç–∞–±–ª–∏—Ü–µ. –ü–æ–∑–≤–æ–ª—è–µ—Ç –≤—ã–±–∏—Ä–∞—Ç—å —ç–ª–µ–º–µ–Ω—Ç—ã –∏–∑ —Ç–∞–±–ª–∏—Ü—ã
    –¥–ª—è –ø–æ—Å–ª–µ–¥—É—é—â–∏—Ö —É—Ç–æ—á–Ω—è—é—â–∏—Ö –∑–∞–ø—Ä–æ—Å–æ–≤ (–Ω–∞–ø—Ä–∏–º–µ—Ä, –¥–ª—è —Å—Ä–∞–≤–Ω–µ–Ω–∏—è).
    
    –†–∞–±–æ—á–∏–µ —Ñ–∞–π–ª—ã —Ö—Ä–∞–Ω—è—Ç—Å—è –≤ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ .gemini:
    - –°–∏—Å—Ç–µ–º–Ω—ã–π –ø—Ä–æ–º–ø—Ç: .\.gemini\GEMINI.md
    - –§–∞–π–ª –ø–æ–º–æ—â–∏:      .\.gemini\ShowHelp.md
    - –ò—Å—Ç–æ—Ä–∏—è —á–∞—Ç–∞:   .\.gemini\.chat_history\
.PARAMETER Model
    –ü–æ–∑–≤–æ–ª—è–µ—Ç –≤—ã–±—Ä–∞—Ç—å –º–æ–¥–µ–ª—å: 'gemini-2.5-flash' (–±—ã—Å—Ç—Ä–∞—è, –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é) –∏–ª–∏ 'gemini-2.5-pro' (–±–æ–ª–µ–µ –º–æ—â–Ω–∞—è).
.EXAMPLE
    .\Find-Spec.ps1
    # –ó–∞–ø—É—Å–∫–∞–µ—Ç —É—Ç–∏–ª–∏—Ç—É. –î–∞–ª–µ–µ –ø—Ä–æ—Å—Ç–æ –≤–≤–µ–¥–∏—Ç–µ –≤ –∫–æ–Ω—Å–æ–ª—å:
    # > Gigabyte A520M K V2
    # > schneider A9R212240
.NOTES
    –¢—Ä–µ–±—É–µ—Ç—Å—è, —á—Ç–æ–±—ã Gemini CLI –±—ã–ª —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –∏ –¥–æ—Å—Ç—É–ø–µ–Ω –≤ —Å–∏—Å—Ç–µ–º–Ω–æ–π –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π PATH.
    –ö–æ–º–∞–Ω–¥–ª–µ—Ç Out-ConsoleGridView –¥–æ—Å—Ç—É–ø–µ–Ω –≤ PowerShell 7+.
#>
[CmdletBinding()]
param(
    [Parameter(HelpMessage = "–í—ã–±–µ—Ä–∏—Ç–µ –º–æ–¥–µ–ª—å: 'gemini-2.5-flash' (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é) –∏–ª–∏ 'gemini-2.5-pro'.")]
    [ValidateSet('gemini-2.5-flash', 'gemini-2.5-pro')]
    [string]$Model = 'gemini-2.5-flash'
)

# --- –®–∞–≥ 1: –ù–∞—Å—Ç—Ä–æ–π–∫–∞ ---
$env:GEMINI_API_KEY = "AIzaSyCY8Nk46H8v3Rt4b02oMLU7gDbqT1xU6wU"
if (-not $env:GEMINI_API_KEY) { Write-Error "..."; return }

$scriptRoot = Get-Location
# ---  ---
$HistoryDir = Join-Path $scriptRoot ".gemini/.chat_history"
# --- –ö–û–ù–ï–¶ –ò–ó–ú–ï–ù–ï–ù–ò–Ø ---
$timestamp = Get-Date -Format "yyyy-MM-dd_HH-mm-ss"
$historyFileName = "ai_session_$timestamp.jsonl"
$historyFilePath = Join-Path $HistoryDir $historyFileName


# --- –§–£–ù–ö–¶–ò–ò ---
function Add-History { 
    param([string]$UserPrompt, [string]$ModelResponse)
    if (-not (Test-Path $HistoryDir)) { New-Item -Path $HistoryDir -ItemType Directory | Out-Null }
    @{ user = $UserPrompt } | ConvertTo-Json -Compress | Add-Content -Path $historyFilePath
    @{ model = $ModelResponse } | ConvertTo-Json -Compress | Add-Content -Path $historyFilePath
}

function Show-History {
    if (-not (Test-Path $historyFilePath)) { Write-Host "–ò—Å—Ç–æ—Ä–∏—è —Ç–µ–∫—É—â–µ–π —Å–µ—Å—Å–∏–∏ –ø—É—Å—Ç–∞." -ForegroundColor Yellow; return }
    Write-Host "`n--- –ò—Å—Ç–æ—Ä–∏—è —Ç–µ–∫—É—â–µ–π —Å–µ—Å—Å–∏–∏ ---" -ForegroundColor Cyan; Get-Content -Path $historyFilePath; Write-Host "------------------------------------`n" -ForegroundColor Cyan
}

function Clear-History {
    if (Test-Path $historyFilePath) {
        try {
            Remove-Item -Path $historyFilePath -Force -ErrorAction Stop
            Write-Host "–ò—Å—Ç–æ—Ä–∏—è —Ç–µ–∫—É—â–µ–π —Å–µ—Å—Å–∏–∏ ($historyFileName) –±—ã–ª–∞ —É–¥–∞–ª–µ–Ω–∞." -ForegroundColor Yellow
        }
        catch { Write-Warning "–ù–µ —É–¥–∞–ª–æ—Å—å —É–¥–∞–ª–∏—Ç—å —Ñ–∞–π–ª –∏—Å—Ç–æ—Ä–∏–∏: $_" }
    }
    else { Write-Host "–ò—Å—Ç–æ—Ä–∏—è —Ç–µ–∫—É—â–µ–π —Å–µ—Å—Å–∏–∏ –ø—É—Å—Ç–∞, —É–¥–∞–ª—è—Ç—å –Ω–µ—á–µ–≥–æ." -ForegroundColor Yellow }
}

function Show-Help {
    $helpFilePath = Join-Path $scriptRoot ".gemini/ShowHelp.md"
    if (Test-Path $helpFilePath) {
        $helpText = Get-Content -Path $helpFilePath -Raw
        Write-Host $helpText
    }
    else {
        Write-Warning "–§–∞–π–ª —Å–ø—Ä–∞–≤–∫–∏ .gemini/ShowHelp.md –Ω–µ –Ω–∞–π–¥–µ–Ω."
    }
}

function Command-Handler {
    param([string]$Command)

    switch ($Command) {
        '?' { Show-Help; return 'continue' }
        'history' { Show-History; return 'continue' }
        ('clear', 'clear-history') { Clear-History; return 'continue' }
        'gemini help' {
            Write-Host "`n--- –°–ø—Ä–∞–≤–∫–∞ Gemini CLI ---`n" -ForegroundColor Cyan
            & gemini --help
            Write-Host "`n--------------------------`n" -ForegroundColor Cyan
            return 'continue'
        }
        ('exit', 'quit') { return 'break' }
        default {
            return $null
        }
    }
}

function Invoke-GeminiPrompt {
    param([string]$Prompt, [string]$Model)
    try {
        $output = & gemini -m $Model -p $Prompt 2>&1
        if (-not $?) { $output | ForEach-Object { Write-Warning $_.ToString() }; return $null }
        $outputString = ($output -join [Environment]::NewLine).Trim()
        $cleanedOutput = $outputString -replace "(?m)^Data collection is disabled\.`r?`n" , ""
        $cleanedOutput = $cleanedOutput -replace "(?m)^Loaded cached credentials\.`r?`n", ""
        return $cleanedOutput.Trim()
    }
    catch { Write-Error "–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–∑–æ–≤–µ Gemini CLI: $_"; return $null }
}

# --- –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –≤—ã–±—Ä–∞–Ω–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö –≤ –∫–æ–Ω—Å–æ–ª—å–Ω–æ–π —Ç–∞–±–ª–∏—Ü–µ ---
function Show-SelectionTable {
    param([array]$SelectedData)
    
    if ($null -eq $SelectedData -or $SelectedData.Count -eq 0) {
        return
    }
    
    Write-Host "`n--- –í–´–ë–†–ê–ù–ù–´–ï –î–ê–ù–ù–´–ï ---" -ForegroundColor Yellow
    
    # –ï—Å–ª–∏ –≤—ã–±—Ä–∞–Ω —Ç–æ–ª—å–∫–æ –æ–¥–∏–Ω —ç–ª–µ–º–µ–Ω—Ç, –æ–±–µ—Ä–Ω—É—Ç—å –≤ –º–∞—Å—Å–∏–≤ –¥–ª—è –µ–¥–∏–Ω–æ–æ–±—Ä–∞–∑–Ω–æ–π –æ–±—Ä–∞–±–æ—Ç–∫–∏
    if ($SelectedData -isnot [array]) {
        $SelectedData = @($SelectedData)
    }
    
    # –ü–æ–ª—É—á–∏—Ç—å –≤—Å–µ —É–Ω–∏–∫–∞–ª—å–Ω—ã–µ —Å–≤–æ–π—Å—Ç–≤–∞ –∏–∑ –≤—ã–±—Ä–∞–Ω–Ω—ã—Ö –æ–±—ä–µ–∫—Ç–æ–≤
    $allProperties = @()
    foreach ($item in $SelectedData) {
        if ($item -is [PSCustomObject]) {
            $properties = $item | Get-Member -MemberType Properties | Select-Object -ExpandProperty Name
            $allProperties = $allProperties + $properties | Sort-Object -Unique
        }
    }
    
    # –ï—Å–ª–∏ –µ—Å—Ç—å —Å–≤–æ–π—Å—Ç–≤–∞, –ø–æ–∫–∞–∑–∞—Ç—å —Ç–∞–±–ª–∏—Ü—É
    if ($allProperties.Count -gt 0) {
        $SelectedData | Format-Table -Property $allProperties -AutoSize -Wrap
    }
    else {
        # –ï—Å–ª–∏ –Ω–µ—Ç –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω—ã—Ö —Å–≤–æ–π—Å—Ç–≤, –ø–æ–∫–∞–∑–∞—Ç—å –∫–∞–∫ –ø—Ä–æ—Å—Ç–æ–π —Å–ø–∏—Å–æ–∫
        for ($i = 0; $i -lt $SelectedData.Count; $i++) {
            Write-Host "[$($i + 1)] $($SelectedData[$i])" -ForegroundColor White
        }
    }
    
    Write-Host "-------------------------" -ForegroundColor Yellow
    Write-Host "–í—ã–±—Ä–∞–Ω–æ —ç–ª–µ–º–µ–Ω—Ç–æ–≤: $($SelectedData.Count)" -ForegroundColor Magenta
    Write-Host ""
}


# --- –®–∞–≥ 2: –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ–∫—Ä—É–∂–µ–Ω–∏—è ---
try { Get-Command gemini -ErrorAction Stop | Out-Null } catch { Write-Error "–ö–æ–º–∞–Ω–¥–∞ 'gemini' –Ω–µ –Ω–∞–π–¥–µ–Ω–∞..."; return }
if (-not (Test-Path (Join-Path $scriptRoot ".gemini/GEMINI.md"))) { Write-Warning "–§–∞–π–ª —Å–∏—Å—Ç–µ–º–Ω–æ–≥–æ –ø—Ä–æ–º–ø—Ç–∞ .gemini/GEMINI.md –Ω–µ –Ω–∞–π–¥–µ–Ω. –û—Ç–≤–µ—Ç—ã –º–æ–¥–µ–ª–∏ –º–æ–≥—É—Ç –±—ã—Ç—å –Ω–µ–ø—Ä–µ–¥—Å–∫–∞–∑—É–µ–º—ã–º–∏."; }
if (-not (Test-Path (Join-Path $scriptRoot ".gemini/ShowHelp.md"))) { Write-Warning "–§–∞–π–ª —Å–ø—Ä–∞–≤–∫–∏ .gemini/ShowHelp.md –Ω–µ –Ω–∞–π–¥–µ–Ω. –ö–æ–º–∞–Ω–¥–∞ '?' –Ω–µ –±—É–¥–µ—Ç —Ä–∞–±–æ—Ç–∞—Ç—å."; }


# --- –®–∞–≥ 3: –û—Å–Ω–æ–≤–Ω–∞—è –ª–æ–≥–∏–∫–∞ ---
Write-Host "AI-–ø–æ–∏—Å–∫–æ–≤–∏–∫ —Å–ø–µ—Ü–∏—Ñ–∏–∫–∞—Ü–∏–π. –ú–æ–¥–µ–ª—å: '$Model'." -ForegroundColor Green
Write-Host "–§–∞–π–ª —Å–µ—Å—Å–∏–∏ –±—É–¥–µ—Ç —Å–æ—Ö—Ä–∞–Ω–µ–Ω –≤: $historyFilePath" -ForegroundColor Yellow
Write-Host "–í–≤–µ–¥–∏—Ç–µ 'exit' –¥–ª—è –≤—ã—Ö–æ–¥–∞ –∏–ª–∏ '?' –¥–ª—è –ø–æ–º–æ—â–∏."
    
$selectionContextJson = $null 
    
while ($true) {
    if ($selectionContextJson) {
        Write-Host -NoNewline -ForegroundColor Green "ü§ñAI [–í—ã–±–æ—Ä–∫–∞ –∞–∫—Ç–∏–≤–Ω–∞] :) > "
    }
    else {
        Write-Host -NoNewline -ForegroundColor Green "ü§ñAI :) > "
    }
    $UserPrompt = Read-Host
        
    $commandResult = Command-Handler -Command $UserPrompt
    if ($commandResult -eq 'break') { break }
    if ($commandResult -eq 'continue') { continue }

    if ([string]::IsNullOrWhiteSpace($UserPrompt)) { continue }
    
    Write-Host "–ò–¥–µ—Ç –ø–æ–∏—Å–∫ –∏ –æ–±—Ä–∞–±–æ—Ç–∫–∞ –∑–∞–ø—Ä–æ—Å–∞..." -ForegroundColor Gray
        
    $historyContent = ""
    if (Test-Path $historyFilePath) { $historyContent = Get-Content -Path $historyFilePath -Raw -ErrorAction SilentlyContinue }
        
    $fullPrompt = @"
### –ò–°–¢–û–†–ò–Ø –î–ò–ê–õ–û–ì–ê (–ö–û–ù–¢–ï–ö–°–¢)
$historyContent
"@
        
    if ($selectionContextJson) {
        $selectionBlock = @"

### –î–ê–ù–ù–´–ï –ò–ó –í–´–ë–û–†–ö–ò (–î–õ–Ø –ê–ù–ê–õ–ò–ó–ê)
$selectionContextJson
"@
        $fullPrompt += $selectionBlock
        $selectionContextJson = $null 
    }

    $fullPrompt += @"

### –ù–û–í–ê–Ø –ó–ê–î–ê–ß–ê
$UserPrompt
"@

    $ModelResponse = Invoke-GeminiPrompt -Prompt $fullPrompt -Model $Model
        
    if ($ModelResponse) {
        $jsonToParse = $null
        $jsonPattern = '(?s)```json\s*(.*?)\s*```'
            
        if ($ModelResponse -match $jsonPattern) { $jsonToParse = $matches[1] }
        else { $jsonToParse = $ModelResponse }
            
        try {
            $jsonObject = $jsonToParse | ConvertFrom-Json
            Write-Host "`n--- Gemini (–æ–±—ä–µ–∫—Ç JSON) ---`n" -ForegroundColor Green
                
            $gridSelection = $jsonObject | Out-ConsoleGridView -Title "–í—ã–±–µ—Ä–∏—Ç–µ —Å—Ç—Ä–æ–∫–∏ –¥–ª—è —Å–ª–µ–¥—É—é—â–µ–≥–æ –∑–∞–ø—Ä–æ—Å–∞ (OK) –∏–ª–∏ –∑–∞–∫—Ä–æ–π—Ç–µ (Cancel)" -OutputMode Multiple
                
            if ($null -ne $gridSelection) {
                Show-SelectionTable -SelectedData $gridSelection
                
                $selectionContextJson = $gridSelection | ConvertTo-Json -Compress -Depth 10
                Write-Host "–í—ã–±–æ—Ä–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞. –î–æ–±–∞–≤—å—Ç–µ –≤–∞—à —Å–ª–µ–¥—É—é—â–∏–π –∑–∞–ø—Ä–æ—Å (–Ω–∞–ø—Ä–∏–º–µ—Ä, '—Å—Ä–∞–≤–Ω–∏ –∏—Ö')." -ForegroundColor Magenta
            }
        }
        catch {
            Write-Host $ModelResponse -ForegroundColor Cyan
        }
            
        Add-History -UserPrompt $UserPrompt -ModelResponse $ModelResponse
    }
}

Write-Host "–ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ —Ä–∞–±–æ—Ç—ã." -ForegroundColor Green