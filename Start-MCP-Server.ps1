# =================================================================================
# MCP-СЕРВЕР ДЛЯ POWERSHELL (НА БАЗЕ UNIVERSAL - ЯВНЫЙ ИМПОРТ)
# =================================================================================
# --- НАСТРОЙКА ---
$McpPort = 8090
# -----------------

# --- ОСНОВНАЯ ЛОГИКА ---
try {
    # Сначала пытаемся импортировать основной модуль
    Import-Module Universal -ErrorAction Stop
    # Затем ЯВНО импортируем вложенный модуль, который содержит команды для сервера
    Import-Module Universal.Server -ErrorAction Stop
}
catch {
    Write-Error "Модуль 'Universal' или 'Universal.Server' не найден или не может быть загружен. Пожалуйста, установите его командой: Install-Module -Name Universal"
    pause
    return
}

Write-Host "Запуск MCP-сервера на порту $McpPort..." -ForegroundColor Green
Write-Host "Это окно должно оставаться открытым. Нажмите Ctrl+C, чтобы остановить сервер."

# Запускаем сервер Universal
Start-PSUServer -Port $McpPort -Endpoint {
    # =================================================================================
    # ===            МАРШРУТ ДЛЯ ЗАПУСКА СКРИПТОВ (POST)                          ===
    # =================================================================================
    New-PSUEndpoint -Method Post -Url "/run-script" -Endpoint {
        param($Body)
        
        $query = $Body.query
        Write-Host "[MCP-Server] Получен POST-запрос на /run-script: '$query'"

        # ... (здесь вся та же логика поиска и запуска скриптов) ...
        # ... (она остается без изменений) ...

        # Возвращаем результат
        # ...
    }
    
    # =================================================================================
    # ===            МАРШРУТ ДЛЯ SSE (GET)                                        ===
    # =================================================================================
    New-PSUEndpoint -Method Get -Url "/*" -Endpoint {
        Write-Host "[MCP-Server] Получен GET-запрос (SSE-подписка)."
        
        # Universal автоматически обрабатывает Content-Type для SSE.
        # Мы просто возвращаем успешный ответ.
        @{ status = 'ready' }
    }
}